(()=>{"use strict";var e,n,t,r={485:(e,n,t)=>{var r=t(294),l=t(745),a=t(917),o=t(206);const i=t.p+"eda7a3cf37f46bee5f4b.webp",p=t.p+"624b430b2e29bb46ab70.webp",m=t.p+"8ea0c96bdfec761f1e2f.webp",c=t.p+"7a3f896ff28d7e8420a9.webp",d=t.p+"96d9f014f453ce5c42b9.webp",s=t.p+"b7835d72d93b3c62a4ba.webp",f=t.p+"96601d55f69f1349f45f.webp",u=t.p+"782c7b90676861dd4979.jpg",g=t.p+"f58ea0583058a3d8c950.jpg",b=t.p+"bd9956edd4297d896746.jpg",h=t.p+"2a4f2749adb20bc743c5.jpg",x=t.p+"d2ee620a6981ec086032.jpg",E=t.p+"37aefb72920d6a6619b8.jpg",A=t.p+"599cbe29d4e3ad5a0fbb.jpg",v=t.p+"f5508c087459b5c9de80.jpg",y=t.p+"88616489a255400c01ee.jpg",w=t.p+"6573fc3c43ed48a9983a.jpg",B=t.p+"c8a8bed5cc65cd16d258.jpg",C=t.p+"9aaa15aeaba790f82a7a.jpg",k=t.p+"304b07fe42ae0e08920d.jpg";var I,j,Z,O,P,_,F,M,S,T,z,L,D,H,N,R,W,G,K,J,U,V,Y,q,Q,X,$,ee,ne,te;function re(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var le=u,ae=[{profileImg:g,name:"Hannelore Domingue",handle:"Pirage",timestamp:"5m",message:r.createElement(r.Fragment,null,r.createElement("p",null,"20% of the people who try something will succeed."),r.createElement("p",null,"The 20% who succeed will repeat the process & repeat it & repeat it."),r.createElement("p",null,"The 80% who fail will keep doing the same thing, expecting different results."),r.createElement("p",null,"The 80% who fail are in the wrong business.")),likeCount:12,commentCount:3},{profileImg:b,name:"Chris W. Sky",handle:"TromboneOwl",timestamp:"12m",message:r.createElement(r.Fragment,null,r.createElement("p",null,"2nd best thing about summer: no homework."),r.createElement("p",null,"1st best: no work.")),likeCount:2,commentCount:1},{profileImg:h,name:"Simba Marions",handle:"CookieBox",timestamp:"48m",message:r.createElement("p",null,"I want to apologize to that girl that stole my picture and posted it on her Instagram."),likeCount:214,commentCount:27},{profileImg:x,name:"Wendy Patterson",handle:"FighterCy",timestamp:"1h",message:r.createElement("p",null,r.createElement("a",{href:"#"},"@BobbyLobby")," Omg Iâ€™m getting a hair cut ðŸ˜‚ðŸ˜‚ðŸ˜‚"),likeCount:5,commentCount:2},{profileImg:E,name:"Lawrence Valencia",handle:"Kavergy",timestamp:"2h",message:r.createElement("p",null,"Good morning, it's ok to be scared"),likeCount:553,commentCount:92},{profileImg:A,name:"Kaleb Mora",handle:"Chromed",timestamp:"6h",message:r.createElement("p",null,"i don't think i could ever wear glasses again, i hate them"),likeCount:8,commentCount:6},{profileImg:v,name:"Tobias Underwood",handle:"HoneyHeist",timestamp:"10h",message:r.createElement("p",null,"Thinking about you again ",r.createElement("a",{href:"#"},"@LifeGoesOn")),likeCount:86,commentCount:18}],oe=[{profileImg:y,name:"Phoenix Rivera",handle:"Jewelodpe"},{profileImg:w,name:"Oliwier Bryant",handle:"ContentSublime"},{profileImg:B,name:"Will Osborn",handle:"Preluti"},{profileImg:C,name:"Cynthia Murphy",handle:"Sartone"},{profileImg:k,name:"Naomi Mueller",handle:"TriteLocal"}],ie="#EEEEEE",pe="#AAAAAA",me="#555555",ce=o.Z.div(I||(I=re(["\n    display: flex;\n    justify-content: center;\n"]))),de=o.Z.div(j||(j=re(["\n    width: 100%;\n    max-width: 1100px;\n\n    display: grid;\n    grid-template-columns: 2fr 6fr 4fr;\n    column-gap: 20px;\n\n    padding-left: 10px;\n    padding-right: 10px;\n"]))),se=o.Z.div(O||(O=re(["\n    position: sticky;\n    top: 0;\n    align-self: start;\n\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n"]))),fe=o.Z.div(P||(P=re(["\n    padding-top: 16px;\n    padding-bottom: 16px;\n\n    margin-bottom: 10px;\n"]))),ue=o.Z.img(_||(_=re(["\n    width: 30px;\n    height: 30px;\n"]))),ge=o.Z.div(F||(F=re(["\n    display: 'flex';\n    flex-direction: 'column';\n    align-items: 'stretch';\n"]))),be=o.Z.div(M||(M=re(["\n    display: flex;\n    align-items: justify;\n    gap: 10px;\n\n    padding-top: 20px;\n    padding-bottom: 20px;\n"]))),he=o.Z.img(S||(S=re(["\n    width: 30px;\n    height: 30px;\n"]))),xe=o.Z.div(T||(T=re(["\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n"]))),Ee=function(){var e=[{icon:p,label:"Home"},{icon:c,label:"Notifications"},{icon:m,label:"Messages"},{icon:d,label:"More"}];return r.createElement(se,null,r.createElement(fe,null,r.createElement(ue,{src:i})),r.createElement(ge,null,e.map((function(e,n){var t=e.icon,l=e.label;return r.createElement(be,{key:n},r.createElement(he,{src:t}),r.createElement(xe,null,l))}))))},Ae=o.Z.div(z||(z=re(["\n    border-left: 1px solid ",";\n    border-right: 1px solid ",";\n\n    min-height: 100vh;\n"])),me,me),ve=o.Z.div(L||(L=re(["\n    padding: 10px;\n\n    font-size: 20px;\n    font-weight: bold;\n\n    /* margin-bottom: 0px; */\n    border-bottom: 1px solid ",";\n"])),me),ye=o.Z.img(D||(D=re(["\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n"]))),we=o.Z.div(H||(H=re(["\n    display: grid;\n    padding: 16px 10px;\n    gap: 16px;\n\n    grid-template-columns: max-content 1fr;\n"]))),Be=o.Z.div(N||(N=re(["\n    display: grid;\n    padding: 10px 10px;\n    gap: 16px;\n\n    grid-template-columns: max-content 1fr;\n    border-top: 1px solid ",";\n\n    &:last-child {\n        border-bottom: 1px solid ",";\n    }\n"])),me,me),Ce=o.Z.div(R||(R=re(["\n    color: ",";\n"])),pe),ke=o.Z.a(W||(W=re(["\n    font-weight: bold;\n    color: ",";\n    text-decoration: none;\n"])),ie),Ie=o.Z.a(G||(G=re(["\n    color: ",";\n    text-decoration: none;\n"])),pe),je=o.Z.div(K||(K=re(["\n    & > * {\n        margin: 0;\n    }\n\n    & > * + * {\n        margin-top: 1em;\n        margin-bottom: 0;\n    }\n\n    a {\n        color: ",";\n    }\n"])),pe),Ze=o.Z.div(J||(J=re(["\n    margin-top: 10px;\n\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n"]))),Oe=o.Z.div(U||(U=re(["\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    align-items: center;\n"]))),Pe=o.Z.img(V||(V=re(["\n    width: 18px;\n    height: 18px;\n\n    opacity: 0.65;\n"]))),_e=o.Z.span(Y||(Y=re(["\n    color: ",";\n"])),pe),Fe=function(){return r.createElement(Ae,null,r.createElement(ve,{dir:"auto"},"Your Feed"),r.createElement(ze,null),r.createElement("div",null,ae.map((function(e,n){return r.createElement(Be,{key:n},r.createElement(ye,{src:e.profileImg}),r.createElement("div",null,r.createElement(Ce,null,r.createElement(ke,{href:We(e.handle)},e.name)," ",r.createElement(Ie,{href:We(e.handle)},"@",e.handle)," ","- ",r.createElement("span",null,e.timestamp)),r.createElement(je,{dir:"auto"},e.message),r.createElement(Ze,null,r.createElement(Oe,null,r.createElement(Pe,{src:f,"aria-label":"Like"}),r.createElement(_e,null,e.likeCount)),r.createElement(Oe,null,r.createElement(Pe,{src:s,"aria-label":"Comment"}),r.createElement(_e,null,e.commentCount)))))}))))},Me=o.Z.div(q||(q=re(["\n    height: 50px;\n    font-size: 20px;\n    color: ",";\n    display: flex;\n    align-items: center;\n"])),"#BBBBBB"),Se=o.Z.div(Q||(Q=re(["\n    display: flex;\n    justify-content: flex-end;\n"]))),Te=o.Z.button(X||(X=re(["\n    font-size: 16px;\n    font-weight: bold;\n    background-color: ",";\n    color: ",";\n\n    border: none;\n    border-radius: 100rem;\n    padding: 6px 10px;\n\n    cursor: pointer;\n"])),"#A35700",ie),ze=function(){return r.createElement(we,null,r.createElement(ye,{src:le}),r.createElement("div",null,r.createElement(Me,{dir:"auto"},"Enter your message..."),r.createElement(Se,null,r.createElement(Te,null,"Send"))))},Le=o.Z.div($||($=re(["\n    position: sticky;\n    top: 0;\n    align-self: start;\n\n    padding-top: 10px;\n"]))),De=o.Z.div(ee||(ee=re(["\n    background-color: ",";\n    border-radius: 10px;\n\n    padding-top: 10px;\n    padding-bottom: 20px;\n"])),"#03213A"),He=o.Z.div(ne||(ne=re(["\n    padding: 10px 20px;\n\n    font-size: 20px;\n    font-weight: bold;\n"]))),Ne=o.Z.div(te||(te=re(["\n    display: grid;\n    padding: 10px 20px;\n    gap: 16px;\n\n    grid-template-columns: max-content 1fr max-content;\n    align-items: center;\n"]))),Re=function(){return r.createElement(Le,null,r.createElement(De,null,r.createElement(He,{dir:"auto"},"Recommended for you"),r.createElement("div",null,oe.map((function(e,n){return r.createElement(Ne,null,r.createElement(ye,{src:e.profileImg}),r.createElement("div",null,r.createElement("div",null,r.createElement(ke,{href:We(e.handle)},e.name)),r.createElement("div",null,r.createElement(Ie,{href:We(e.handle)},"@",e.handle))),r.createElement("div",null,r.createElement(Te,null,"Follow")))})))))};function We(e){return"https://www.kiwi-chirp.com/profile/".concat(e)}const Ge=function(){return r.createElement(r.Fragment,null,r.createElement(a.xB,{styles:(0,a.iv)(Z||(Z=re(["\n                    html {\n                        background-color: ",";\n                        color: ",";\n                        font-family: 'Poppins', sans-serif;\n                        font-size: 16px;\n                    }\n\n                    body {\n                        margin: 0;\n                    }\n                "])),"#02111E",ie)}),r.createElement(ce,null,r.createElement(de,null,r.createElement(Ee,null),r.createElement(Fe,null),r.createElement(Re,null))))};var Ke=t(379),Je=t.n(Ke),Ue=t(426);Je()(Ue.Z,{insert:"head",singleton:!1}),Ue.Z.locals;const Ve=t.p+"72feef6636e1105c33a2.js";var Ye=document.createElement("script");Ye.defer=!0,Ye.src=Ve,document.head.appendChild(Ye),document.body.innerHTML='<div id="root"></div>',(0,l.s)(document.getElementById("root")).render(r.createElement(Ge,null))},426:(e,n,t)=>{t.d(n,{Z:()=>x});var r=t(15),l=t.n(r),a=t(645),o=t.n(a),i=t(667),p=t.n(i),m=t(738),c=t(805),d=t(950),s=t(264),f=o()(l()),u=p()(m),g=p()(c),b=p()(d),h=p()(s);f.push([e.id,"@font-face {\r\n    font-family: 'Poppins';\r\n    src: url("+u+") format('ttf');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Poppins';\r\n    src: url("+g+") format('ttf');\r\n    font-weight: normal;\r\n    font-style: italic;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Poppins';\r\n    src: url("+b+") format('ttf');\r\n    font-weight: bold;\r\n    font-style: normal;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Poppins';\r\n    src: url("+h+") format('ttf');\r\n    font-weight: bold;\r\n    font-style: italic;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,0DAAiF;IACjF,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,0DAAgF;IAChF,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,0DAA6E;IAC7E,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,0DAAmF;IACnF,iBAAiB;IACjB,kBAAkB;AACtB",sourcesContent:["@font-face {\r\n    font-family: 'Poppins';\r\n    src: url('./fonts/poppins/poppins-v20-latin-ext_latin-regular.ttf') format('ttf');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Poppins';\r\n    src: url('./fonts/poppins/poppins-v20-latin-ext_latin-italic.ttf') format('ttf');\r\n    font-weight: normal;\r\n    font-style: italic;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Poppins';\r\n    src: url('./fonts/poppins/poppins-v20-latin-ext_latin-700.ttf') format('ttf');\r\n    font-weight: bold;\r\n    font-style: normal;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Poppins';\r\n    src: url('./fonts/poppins/poppins-v20-latin-ext_latin-700italic.ttf') format('ttf');\r\n    font-weight: bold;\r\n    font-style: italic;\r\n}\r\n\r\n"],sourceRoot:""}]);const x=f},950:(e,n,t)=>{e.exports=t.p+"047a47da0baf6156a955.ttf"},264:(e,n,t)=>{e.exports=t.p+"762be473bb3c073387ce.ttf"},805:(e,n,t)=>{e.exports=t.p+"67a49d47491747c816eb.ttf"},738:(e,n,t)=>{e.exports=t.p+"1dbb9564ec4d6633c587.ttf"}},l={};function a(e){var n=l[e];if(void 0!==n)return n.exports;var t=l[e]={id:e,exports:{}};return r[e](t,t.exports,a),t.exports}a.m=r,e=[],a.O=(n,t,r,l)=>{if(!t){var o=1/0;for(c=0;c<e.length;c++){for(var[t,r,l]=e[c],i=!0,p=0;p<t.length;p++)(!1&l||o>=l)&&Object.keys(a.O).every((e=>a.O[e](t[p])))?t.splice(p--,1):(i=!1,l<o&&(o=l));if(i){e.splice(c--,1);var m=r();void 0!==m&&(n=m)}}return n}l=l||0;for(var c=e.length;c>0&&e[c-1][2]>l;c--)e[c]=e[c-1];e[c]=[t,r,l]},a.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return a.d(n,{a:n}),n},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(e,r){if(1&r&&(e=this(e)),8&r)return e;if("object"==typeof e&&e){if(4&r&&e.__esModule)return e;if(16&r&&"function"==typeof e.then)return e}var l=Object.create(null);a.r(l);var o={};n=n||[null,t({}),t([]),t(t)];for(var i=2&r&&e;"object"==typeof i&&!~n.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((n=>o[n]=()=>e[n]));return o.default=()=>e,a.d(l,o),l},a.d=(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.p="./",(()=>{var e={826:0};a.O.j=n=>0===e[n];var n=(n,t)=>{var r,l,[o,i,p]=t,m=0;if(o.some((n=>0!==e[n]))){for(r in i)a.o(i,r)&&(a.m[r]=i[r]);if(p)var c=p(a)}for(n&&n(t);m<o.length;m++)l=o[m],a.o(e,l)&&e[l]&&e[l][0](),e[l]=0;return a.O(c)},t=self.webpackChunkweb_dev_boilerplate=self.webpackChunkweb_dev_boilerplate||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})(),a.nc=void 0;var o=a.O(void 0,[748],(()=>a(485)));o=a.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,