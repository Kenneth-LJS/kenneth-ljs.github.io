(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[531],{12446:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/exploring-epicycles",function(){return n(85627)}])},8353:function(e,t,n){"use strict";var r=n(85893),a=n(34914),i=n(55829),o=n(99840),s=n(18532),c=n(98683),l=n(84283),h=n(45146),u=n(15252),d=n(25675),p=n.n(d),m=n(53222),g=n.n(m);let y=l.Ro,f=g().codeBgColor,w=l.Ro['code[class*="language-"]'].fontFamily,b={...y,':not(pre) > code[class*="language-"]':{...y[':not(pre) > code[class*="language-"]'],background:f},'code[class*="language-"]':{...y['code[class*="language-"]'],background:f},'pre[class*="language-"]':{...y['pre[class*="language-"]'],background:f}},v=e=>{let{siteHeadProps:t,headerBg:n,articleMarkdown:s}=e,[c,l]=function(e){let t=RegExp("<header>.*<\\/header>","s"),n=(e.match(t)||[""])[0],r=e.replace(t,"");return[n,r]}(s);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.Z,{...t}),(0,r.jsx)(a.Z,{footerContent:"Designed and built from scratch by ".concat(u.Rh," with NextJS and SCSS!"),header:(0,r.jsxs)("div",{className:g().headerContainer,children:[(0,r.jsx)(p(),{className:g().headerBackground,src:n,alt:"",priority:!0,fill:!0}),(0,r.jsx)("div",{className:g().headerContent,children:x(c)})]}),children:(0,r.jsx)(i.Z,{children:(0,r.jsx)("div",{className:g().article,style:{"--code-font-family":w},children:x(l)})})})]})};function x(e){return(0,r.jsx)("div",{className:g().markdown,children:(0,r.jsx)(s.D,{rehypePlugins:[h.Z],components:{code(e){let{node:t,inline:n,className:a,children:i,...o}=e,s=/language-(\w+)/.exec(a||"");return!n&&s?(0,r.jsx)(c.Z,{style:b,language:s[1],PreTag:"div",...o,children:String(i).replace(/\n$/,"")}):(0,r.jsx)("code",{className:a,...o,children:i})}},children:e})})}t.Z=v},55731:function(e,t,n){"use strict";n.d(t,{w:function(){return i}});var r=n(15252);function a(e){return new URL(e,r.Tu).toString()}let i={INTRODUCTION_TO_DOMSI:{title:"Introduction to Domsi",href:"/article/introduction-to-domsi/",headerBg:"/article/introduction-to-domsi/banner.webp",sitePreview:{img:{src:a("/article/introduction-to-domsi/thumbnail.png"),type:"image/png",width:600,height:400},description:"A powerful and blazingly fast web scraping library that integrates element styles, attributes, and DOM hierarchy in its selectors."},card:{title:"Domsi",description:"A powerful and blazingly fast web scraping library that integrates element styles, attributes, and DOM hierarchy in its selectors.",thumbnailSrc:"/article/introduction-to-domsi/thumbnail.webp",tags:["Web scraping","Typescript","NPM","Open Source","Algorithm"]}},MURDER_MYSTERY_GAME:{title:"Murder Mystery Game",href:"/article/murder-mystery-game/",headerBg:"/article/murder-mystery-game/banner.webp",sitePreview:{img:{src:a("/article/murder-mystery-game/thumbnail.png"),type:"image/png",width:600,height:400},description:"The game engine for a Victorian Murder Mystery game I designed for an online event."},card:{title:"Murder Mystery Game",thumbnailSrc:"/article/murder-mystery-game/thumbnail.webp",description:"I created a game engine for a Murder Mystery event! Learn how I used encryption concepts to obfuscate game data from prying players.",tags:["Game Engine","React","SCSS","Typescript","Cryptography","Webpack Loader"]}},FOCUS_SHEPHERD:{title:"Focus Shepherd",href:"/article/focus-shepherd/",headerBg:"/article/focus-shepherd/banner.webp",sitePreview:{description:"Focus Shepherd is a TamperMonkey / GreaseMonkey script that gently reminds you to focus when you get distracted on your web browser!",img:{src:a("/article/focus-shepherd/thumbnail.png"),type:"image/png",width:600,height:400}},card:{title:"Focus Shepherd",thumbnailSrc:"/article/focus-shepherd/thumbnail.webp",description:"Focus Shepherd is a TamperMonkey / GreaseMonkey script that gently reminds you to focus when you get distracted on your web browser!",tags:["TamperMonkey / GreaseMonkey","HTML","Javascript","Productivity"]}},EXPLORING_EPICYCLES:{title:"Exploring Epicycles",href:"/article/exploring-epicycles/",headerBg:"/article/exploring-epicycles/banner.webp",sitePreview:{description:"Come with me on the journey to explore the Fourier transform, and how we can use that to compute epicycles.",img:{src:a("/article/exploring-epicycles/thumbnail.png"),type:"image/png",width:600,height:400}},card:{title:"Epicycles",thumbnailSrc:"/article/exploring-epicycles/thumbnail.webp",description:"Image processing with the Fast Fourier Transform to create an animated illustration of epicycles.",tags:["Python","Mathematics","Numpy","Python Imaging Library (PILLOW)","FFMPEG"]}},SNAP_CONSOLE:{title:"Snap Console",href:"/article/snap-console/",headerBg:"/article/snap-console/banner.webp",sitePreview:{img:{src:a("/article/snap-console/thumbnail.png"),type:"image/png",width:600,height:400},description:"A easy-to-use console library in Python to display beautiful outputs."},card:{title:"Snap Console",thumbnailSrc:"/article/snap-console/thumbnail.webp",description:"A easy-to-use console library in Python to display beautiful outputs. Implemented with the curses library.",tags:["Python","Open Source","PIP","Curses Terminal Library"]}},SHARD_GAME_ENGINE:{title:"Shard Game Engine",href:"/article/shard-game-engine/",headerBg:"/article/shard-game-engine/banner.webp",sitePreview:{img:{src:a("/article/shard-game-engine/thumbnail.png"),type:"image/png",width:600,height:400},description:"A text-based game engine with a unique story structure. The engine allows users to create custom stories too."},card:{title:"Shard Game Engine",thumbnailSrc:"/article/shard-game-engine/thumbnail.webp",description:"A text-based game engine with a unique story structure. The engine allows users to create custom stories too.",tags:["Game Engine","SCSS","Typescript","Parcel.js"]}}}},85627:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});var r=n(85893),a=n(8353),i=n(55731);let o=i.w.EXPLORING_EPICYCLES;function s(){var e;return(0,r.jsx)(a.Z,{siteHeadProps:{title:o.title,description:o.sitePreview.description,image:o.sitePreview.img,twitterImageSrc:null===(e=o.sitePreview.img)||void 0===e?void 0:e.src},articleMarkdown:'<div style="display: none;">\nOutline:\nMotivation\nI’ve seen those cool youtube vids: https://www.youtube.com/watch?v=QVuU2YCwHjw\nI went down a rabbit hole of exploring Fourier transforms, etc\nBut I never really understood how to get from a Fourier transform to a video like that.\nSo let’s explore that together. For this, I assume you have a brief understanding of complex numbers\nFourier Transform (brief intro)\n1D signal -> 1D array of numbers\nYou get a 1D array back\nThe array index = strength of that frequency. Since no time units, use the array index as “time”\nTaking it to 2D\nThis was where I got lost. How do you get anywhere from here? Do we do a 2D fourier transform? How do we get the X and Y coordinates into this formula?\nOur inputs: (X, Y) coordinates over time\nIdea 1: Take X and Y and fourier transform separately\n???\nIdea 2: 2D fourier transform? but how do we put those numbers into a 2D grid?\nIdea 3: 1D signal of complex numbers -> 1D array complex numbers, since it’s still a 1D transformation\nBut how does this translate into epicycles? My understanding is each circle needs a corresponding frequency and amplitude, but how do we know what phase?\nTurns out in the 1D signal, you do get a complex number back too. That encodes the phase.\nIn 2D, you’re given a complex number back that indicates the phase. In fact, the complex number already includes 2 things: the size (the abs of the complex number), and the phase (the arg of the complex number). Then as before, the frequency is given by the index.\nPutting It Together\nRun the numpy libraries\nPILLOW to make the images. We take all the circles, sort them in decreasing order of size, then render them on a provided base image\nWe then use FFMPEG with the following command to render the video\nConclusion\nTHERE. This final project was years in the making of coming back to the Fourier transform, etc. And it’s finally done! I can rest well.\n</div>\n<header>\n\n<h1>Exploring Epicycles</h1>\n\n<p>A fun and mathematical journey into discovering complex numbers, Fourier transforms, and the secrets to drawing anything with circles</p>\n\n<p><a href="/project/shard-game/" target="_blank" rel="noopener noreferrer">Source Code</a></p>\n\n<p align=center>\n  Post in progress! Check back again.\n</p>\n\n\n</header>\n\n## Circles and Simpsons\nYears ago, I came across this video on YouTube that showed a drawing of Homer Simpsons drawn by rotating circles of different radii and speeds.\n\n<p align=center>\n  <iframe style="width: min(100%, 600px); aspect-ratio: 4 / 3;" src="https://www.youtube.com/embed/QVuU2YCwHjw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>\n</p>\n\n“Man,” I thought, “wouldn’t it be cool to be able to do this someday?”\n\nThat started me on a journey of Mathematics that I was more than happy to indulge in. I learnt that these rotating circles were called epicycles. Ptolemy, a Greek mathematician and astronomer, theorised that with enough rotating circles, you could trace the movement of every celestial body. Turns out he was right, except that it’s not just planetary movements that you can predict, but literally every periodic motion. And that includes that outline of Homer Simpson.\n\nTo get these cycles, there’s something called the Fourier transform. If this concept is new to you, I recommend reading <a href="https://www.3blue1brown.com/lessons/fourier-transforms" target="_blank" rel="noopener noreferrer">But what is the Fourier Transform?</a> by Grant Sanderson (also known as <a href="https://www.youtube.com/@3blue1brown" target="_blank" rel="noopener noreferrer">3Blue1Brown</a> on YouTube). The rest of this post is going to get pretty maths-heavy, so familiarise yourself with complex numbers and Fourier transforms before we go on. Hang on tight!\n\nFourier Transforms\nTo briefly summarise, the Fourier transform is a way to split a signal into its constituent frequencies.\n\n[graph of how one frequency splits into multiple]\n\nMathematicians like to call this the “transformation of a signal from the time domain to the frequency domain”. That’s nice, but it still doesn’t explain how I can draw Homer Simpson with circles. Instead, let’s turn to the programmer’s way of understanding functions: input and output.\n\nIn the classic Fourier transform, we take a signal as an input, which we represent as amplitude over time. As output, we get a breakdown of frequencies. For instance, in the illustration below, the two frequencies that make up the following signal are represented by the two peaks in the output graph.\n\n[graph of 2 frequencies getting split, then show how it corresponds to the peaks]\n\nOne problem: we can’t represent a continuous signal in finite data, but what we can do is to break it down into discrete samples and apply a discrete Fourier transform.\n\n[graph of continuous to discrete signal, then graph of its FFT]\n\nBack to the input-output explanation. Our input is an array of amplitudes. In this case, the time component is embedded in the array index. Our output is a 1D array of numbers representing the “strength” of each frequency.\n\n[show how the array also embeds time]\n\n[show how in the frequency domain, the amplitude is represented by the y axis, freq is represented by the x axis]\n\nBut this is where I got stuck. How do you get from this to spinning circles that trace out an image?\n## 2D Fourier Transform\nA signal is 1-dimensional: amplitude over time. Epicycles, however, are 2-dimensional: x and y coordinates over time, right? Nope. 2D Fourier transforms take on a very different shape from what we’re looking for.\n\n[image of 2d fourier transform]\n\nInput:\n2D array of amplitudes over x/y space\n\nOutput\n2D array of amplitudes over frequency space\n\nTODO\n\n\n\n\n\n\n\n',headerBg:o.headerBg})}},53222:function(e){e.exports={baseFs:"18px",baseColor:"#1f2834",primaryColor:"#eee",secondaryColor:"#11d0da",codeBgColor:"#12171e",headerContainer:"page_headerContainer__rzIn8",headerBackground:"page_headerBackground__E1Yh7",headerContent:"page_headerContent__FT7K_",markdown:"page_markdown__21Yyp"}}},function(e){e.O(0,[757,187,646,774,888,179],function(){return e(e.s=12446)}),_N_E=e.O()}]);